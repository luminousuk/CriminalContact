{"version":3,"sources":["webpack:///./src/renderer/$_lazy_route_resource lazy namespace object","webpack:///./src/renderer/app/app-routing.module.ts","webpack:///./src/renderer/app/app.component.html","webpack:///./src/renderer/app/app.component.scss","webpack:///./src/renderer/app/app.component.ts","webpack:///./src/renderer/app/app.module.ts","webpack:///./src/renderer/app/bank-test/bank-test.component.html","webpack:///./src/renderer/app/bank-test/bank-test.component.scss","webpack:///./src/renderer/app/bank-test/bank-test.component.ts","webpack:///./src/renderer/app/banking/banking.component.html","webpack:///./src/renderer/app/banking/banking.component.scss","webpack:///./src/renderer/app/banking/banking.component.ts","webpack:///./src/renderer/app/dashboard/dashboard.component.html","webpack:///./src/renderer/app/dashboard/dashboard.component.scss","webpack:///./src/renderer/app/dashboard/dashboard.component.ts","webpack:///./src/renderer/app/players/players.component.html","webpack:///./src/renderer/app/players/players.component.scss","webpack:///./src/renderer/app/players/players.component.ts","webpack:///./src/renderer/app/services/bank.service.ts","webpack:///./src/renderer/app/services/file.service.ts","webpack:///./src/renderer/app/services/player.service.ts","webpack:///./src/renderer/app/shared/models/account.model.ts","webpack:///./src/renderer/app/shared/models/entity.model.ts","webpack:///./src/renderer/app/shared/models/player.model.ts","webpack:///./src/renderer/app/shared/models/transaction.model.ts","webpack:///./src/renderer/app/sidebar/sidebar.component.html","webpack:///./src/renderer/app/sidebar/sidebar.component.scss","webpack:///./src/renderer/app/sidebar/sidebar.component.ts","webpack:///./src/renderer/environments/environment.ts","webpack:///./src/renderer/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/renderer/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { BankingComponent } from './banking/banking.component';\nimport { BankTestComponent } from \"./bank-test/bank-test.component\";\nimport { PlayersComponent } from './players/players.component';\n\nconst routes: Routes = [\n  { path: \"dashboard\", component: DashboardComponent },\n  { path: \"players\", component: PlayersComponent },\n  { path: \"banking\", component: BankingComponent },\n  { path: \"bank-test\", component: BankTestComponent },\n  { path: \"\", redirectTo: \"/dashboard\", pathMatch: \"full\" }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      routes,\n      {\n        enableTracing: false\n      }\n    )\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<cc-sidebar></cc-sidebar>\\n<div class=\\\"container-fluid pl-5 pt-2\\\">\\n  <div class=\\\"row\\\">\\n    <main role=\\\"main\\\" class=\\\"col\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </main>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcmVuZGVyZXIvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { FileService } from \"./services/file.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'CriminalContact';\n\n  constructor(\n    private fileService: FileService)\n  { }\n\n  ngOnInit() {\n    // this.fileService.getFiles()\n    //   .then((files: string[]) => {\n    //     console.log(files);\n    //   });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BankTestComponent } from './bank-test/bank-test.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BankingComponent } from './banking/banking.component';\nimport { PlayersComponent } from './players/players.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BankTestComponent,\n    SidebarComponent,\n    DashboardComponent,\n    BankingComponent,\n    PlayersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-8\\\">\\n    <h2>Players</h2>\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th scope=\\\"col\\\">Name</th>\\n          <th scope=\\\"col\\\">Account #</th>\\n          <th scope=\\\"col\\\">Balance</th>\\n          <th scope=\\\"col\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody *ngFor=\\\"let player of players\\\">\\n        <tr>\\n          <td>{{player.name}}</td>\\n          <td>{{player.account.accountNumber}}</td>\\n          <td>{{player.account.balance | currency:\\\"£\\\"}}</td>\\n          <td>\\n              <button class=\\\"btn btn-sm btn-secondary\\\" (click)=\\\"showTransactions(player)\\\">Transactions</button>\\n            <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deletePlayer(player)\\\">Delete</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot>\\n        <tr>\\n          <th></th>\\n          <th></th>\\n          <th>{{getTotalPlayerBalance() | currency:\\\"£\\\"}}</th>\\n          <th></th>\\n        </tr>\\n      </tfoot>\\n    </table>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <div class=\\\"card mb-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Interest</h5>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"interestPct\\\">Interest %</label>\\n          <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"interestPct\\\" id=\\\"interestPct\\\">\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addInterest()\\\">Add Interest</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Transfer money</h5>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"newPlayerName\\\">From</label>\\n          <select [(ngModel)]=\\\"transferFrom\\\" class=\\\"form-control form-control-sm\\\">\\n              <option *ngFor=\\\"let player of players\\\" [ngValue]=\\\"player\\\">{{player.name}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"newPlayerName\\\">To</label>\\n            <select [(ngModel)]=\\\"transferTo\\\" class=\\\"form-control form-control-sm\\\">\\n                <option *ngFor=\\\"let player of players\\\" [ngValue]=\\\"player\\\">{{player.name}}</option>\\n            </select>\\n          </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"newPlayerName\\\">Amount</label>\\n          <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"transferAmount\\\" id=\\\"transferAmount\\\">\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"transfer()\\\">Transfer</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcmVuZGVyZXIvYXBwL2JhbmstdGVzdC9iYW5rLXRlc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { BankService } from '../services/bank.service';\nimport { Player } from '../shared/models/player.model';\nimport { PlayerService } from '../services/player.service';\n\n@Component({\n  selector: 'cc-bank-test',\n  templateUrl: './bank-test.component.html',\n  styleUrls: ['./bank-test.component.scss']\n})\nexport class BankTestComponent implements OnInit {\n\n  public interestPct: number = 0.1;\n\n  public transferFrom: Player;\n  public transferTo: Player;\n  public transferAmount: number;\n\n  constructor(\n    private _bankService: BankService,\n    private _playerService: PlayerService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public get players(): Player[] {\n    return this._playerService.players;\n  }\n\n  public deletePlayer(player:Player): void {\n    this._playerService.deletePlayer(player);\n  }\n\n  public transfer(): void {\n    const from = this.transferFrom.account.accountNumber;\n    const to = this.transferTo.account.accountNumber;\n    this._bankService.TransferFunds(from, to, this.transferAmount);\n  }\n\n  public getTotalPlayerBalance(): number {\n    let total = 0;\n    for(let player of this.players) {\n      total += player.account.balance;\n    }\n    return total;\n  }\n\n  public addInterest(): void {\n    this._bankService.GenerateInterest(this.interestPct);\n  }\n\n  public showTransactions(player: Player): void {\n    console.log(`Transaction history for ${player.name}`);\n    player.account.transactions.forEach(t => {\n      console.log(`${t.description} - £${t.amount.toFixed(2)} - £${t.cumulativeBalance.toFixed(2)}`);\n    });\n    console.log(`Current balance: £${player.account.balance}`);\n  }\n}\n","module.exports = \"<p>\\n  banking works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcmVuZGVyZXIvYXBwL2JhbmtpbmcvYmFua2luZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cc-banking',\n  templateUrl: './banking.component.html',\n  styleUrls: ['./banking.component.scss']\n})\nexport class BankingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1 class=\\\"display-3\\\">Criminal Contact</h1>\\n<hr />\\n<div class=\\\"card-deck\\\">\\n    <div class=\\\"card\\\">\\n      <a routerLink=\\\"/players\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Players</h5>\\n          <p class=\\\"card-text h1 text-success\\\">{{playerCount}}</p>\\n        </div>\\n      </a>\\n    </div>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Transactions</h5>\\n        <p class=\\\"card-text h1 text-warning\\\">{{transactionCount}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Deaths</h5>\\n        <p class=\\\"card-text h1 text-danger\\\">{{deathCount}}</p>\\n      </div>\\n    </div>\\n  </div>\\n  <hr />\\n  <button class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"seedPlayers()\\\">Seed Players</button>\"","module.exports = \".card a {\\n  color: inherit; }\\n  .card a:hover {\\n    text-decoration: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9yZW5kZXJlci9hcHAvZGFzaGJvYXJkL0Q6XFxDT0RFXFxHSVRcXExVTUlOT1VTXFxDcmltaW5hbENvbnRhY3Qvc3JjXFxyZW5kZXJlclxcYXBwXFxkYXNoYm9hcmRcXGRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGNBQWMsRUFBQTtFQUZ0QjtJQUtZLHFCQUFxQixFQUFBIiwiZmlsZSI6InNyYy9yZW5kZXJlci9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcclxuICAgIGEge1xyXG4gICAgICAgIGNvbG9yOiBpbmhlcml0O1xyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { PlayerService } from '../services/player.service';\n\n@Component({\n  selector: 'cc-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    private _playerService: PlayerService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public get playerCount(): number {\n    return this._playerService.players.length;\n  }\n\n  public get transactionCount(): number {\n    let transactionCount = 0;\n    for (let player of this._playerService.players) {\n      transactionCount += player.account.transactions.length;\n    }\n    return transactionCount;\n  }\n\n  public get deathCount(): number {\n    return this._playerService.players.filter(p => p.isDead).length;\n  }\n\n  public seedPlayers(): void {\n    [\n      {firstName: \"Jeff\", lastName: \"Goldblum\", startingAmount: 5000},\n      {firstName: \"Brian\", lastName: \"Blessed\", startingAmount: 1750},\n      {firstName: \"Tony\", lastName: \"Hawk\", startingAmount: 4500},\n      {firstName: \"Lionel\", lastName: \"Ritchie\", startingAmount: 9900},\n      {firstName: \"Bruce\", lastName: \"Willis\", startingAmount: 7420},\n      {firstName: \"Bill\", lastName: \"Gates\", startingAmount: 50000},\n      {firstName: \"Katy\", lastName: \"Price\", startingAmount: 2130},\n      {firstName: \"Princess\", lastName: \"Peach\", startingAmount: 6400},\n      {firstName: \"Snoop\", lastName: \"Dogg\", startingAmount: 420},\n      {firstName: \"Arnold\", lastName: \"Schwarzeneggar\", startingAmount: 6666}\n    ].forEach(p => {\n      this._playerService.createPlayer(p.firstName, p.lastName, p.startingAmount);\n    });\n  }\n\n}\n","module.exports = \"<h2>\\n  <span>Players</span>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"createPlayer()\\\">\\n    Create Player\\n  </button>\\n</h2>\\n<table class=\\\"table\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Name</th>\\n      <th scope=\\\"col\\\">Account #</th>\\n      <th scope=\\\"col\\\">Balance</th>\\n      <th scope=\\\"col\\\"></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let player of players\\\" [class.table-danger]=\\\"player.isDead\\\">\\n      <td>{{player.name}}</td>\\n      <td>{{player.account.accountNumber}}</td>\\n      <td>{{player.account.balance | currency:\\\"£\\\"}}</td>\\n      <td class=\\\"text-right\\\">\\n        <div ngbDropdown placement=\\\"bottom-right\\\">\\n          <button class=\\\"btn btn-sm btn-light\\\" ngbDropdownToggle>Actions</button>\\n          <div ngbDropdownMenu class=\\\"dropdown-menu-right\\\">\\n            <button class=\\\"dropdown-item\\\">Transactions</button>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <button class=\\\"dropdown-item\\\">Edit</button>\\n            <button class=\\\"dropdown-item text-danger\\\" (click)=\\\"setDead(player)\\\">Mark as Dead</button>\\n            <button class=\\\"dropdown-item text-danger\\\" (click)=\\\"deletePlayer(player)\\\">Delete</button>\\n          </div>\\n        </div>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n<ng-template #confirmDeleteModal let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Delete Player</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    Are you sure you wish to delete this player?\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" ngbAutofocus (click)=\\\"modal.dismiss()\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"modal.close()\\\">Delete</button>\\n  </div>\\n</ng-template>\\n<ng-template #addPlayerModal let-modal>\\n    <div class=\\\"modal-header\\\">\\n      <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Create Player</h5>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"create-player-name\\\" class=\\\"col-form-label\\\">First Name:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"create-player-name\\\" [(ngModel)]=\\\"createPlayerFirstName\\\" ngbAutofocus required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"create-player-name\\\" class=\\\"col-form-label\\\">Last Name:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"create-player-name\\\" [(ngModel)]=\\\"createPlayerLastName\\\" ngbAutofocus required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"create-player-amount\\\" class=\\\"col-form-label\\\">Starting amount:</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"create-player-amount\\\" value=\\\"1000\\\" step=\\\"100\\\" [(ngModel)]=\\\"createPlayerAmount\\\" required>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" ngbAutofocus (click)=\\\"modal.dismiss()\\\">Cancel</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"modal.close()\\\">Create</button>\\n    </div>\\n  </ng-template>\\n  <ng-template #confirmDeadModal let-modal>\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Player Death</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        Are you sure you wish to mark this player as dead?\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" ngbAutofocus (click)=\\\"modal.dismiss()\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"modal.close()\\\">Mark Dead</button>\\n      </div>\\n    </ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcmVuZGVyZXIvYXBwL3BsYXllcnMvcGxheWVycy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { PlayerService } from '../services/player.service';\nimport { Player } from '../shared/models/player.model';\n\n@Component({\n  selector: 'cc-players',\n  templateUrl: './players.component.html',\n  styleUrls: ['./players.component.scss']\n})\nexport class PlayersComponent implements OnInit {\n\n  @ViewChild(\"confirmDeleteModal\")\n  private _confirmDeleteModal: ElementRef;\n\n  @ViewChild(\"addPlayerModal\")\n  private _addPlayerModal: ElementRef;\n\n  @ViewChild(\"confirmDeadModal\")\n  private _confirmDeadModal: ElementRef;\n\n  public createPlayerFirstName: string = \"\";\n  public createPlayerLastName: string = \"\";\n  public createPlayerAmount: number = 1000;\n\n  constructor(\n    private _playerService: PlayerService,\n    private _modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public get players(): Player[] {\n    return this._playerService.players;\n  }\n\n  public createPlayer(): void {\n    this._modalService.open(this._addPlayerModal).result.then(() => {\n      this._playerService.createPlayer(this.createPlayerFirstName, this.createPlayerLastName, this.createPlayerAmount);\n      this.clearCreatePlayerInputs();\n    }, () => {\n      this.clearCreatePlayerInputs();\n    }); \n  }\n\n  private clearCreatePlayerInputs(): void {\n    this.createPlayerFirstName = \"\";\n    this.createPlayerLastName = \"\";\n  }\n\n  public deletePlayer(player: Player) {\n    this._modalService.open(this._confirmDeleteModal).result.then(() => {\n      this._playerService.deletePlayer(player);\n    }, () => {});\n  }\n\n  public setDead(player: Player) {\n    this._modalService.open(this._confirmDeadModal).result.then(() => {\n      player.setDead();\n    }, () => {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Account } from \"../shared/models/account.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BankService {\n\n  private readonly _accounts: Map<number, Account> = new Map<number, Account>();\n\n  constructor() { }\n\n  public OpenAccount(openingBalance: number): Account {\n    const accountNumber = this.GetNextAccountNumber();\n    const account = new Account(accountNumber, openingBalance);\n    this._accounts.set(accountNumber, account);\n\n    return account;\n}\n\npublic GetAccount(accountNumber: number): Account {\n    if (!this._accounts.has(accountNumber)) {\n        throw new Error(`Account #${accountNumber} does not exist`);\n    }\n\n    return this._accounts.get(accountNumber) as Account;\n}\n\npublic TransferFunds(from: number, to: number, amount: number) {\n    if (amount <= 0) {\n        throw new Error(\"Cannot transfer a negative amount\");\n    }\n    \n    const fromAccount: Account = this.GetAccount(from);\n    const toAccount: Account = this.GetAccount(to);\n\n    fromAccount.Withdraw(amount, `Transfer to #${to}`);\n    toAccount.Deposit(amount, `Transfer from #${from}`);\n\n}\n\npublic GenerateInterest(interestPct: number) {\n    this._accounts.forEach((act: Account, key: number) => {\n        const interestAmount = act.balance * interestPct;\n        act.Deposit(interestAmount, \"Interest\");\n    });\n}\n\nprivate GetNextAccountNumber(): number {\n    const min = 1000;\n    const max = 9999;\n\n    let accountNumber: number;\n    do {\n        accountNumber = Math.floor(Math.random() * (max - min)) + min;\n    }\n    while (this._accounts.has(accountNumber));\n\n    return accountNumber;\n}\n}\n","import { Injectable } from '@angular/core';\nimport { IpcRenderer } from \"electron\";\nimport { resolve } from 'url';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n  private ipc: IpcRenderer;\n\n  constructor() {\n    if ((<any>window).require) {\n      try {\n        this.ipc = (<any>window).require(\"electron\").ipcRenderer;\n      }\n      catch (error) {\n        throw error;\n      }\n    }\n    else {\n      console.warn(\"Could not load electron ipc\");\n    }\n  }\n\n  async getFiles(): Promise<string[]> {\n    return new Promise<string[]>((resolve, reject) => {\n      this.ipc.once(\"getFilesResponse\", (event, arg) => {\n        resolve(arg);\n      });\n      this.ipc.send(\"getFiles\");\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Player } from '../shared/models/player.model';\nimport { BankService } from './bank.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n\n  private _players: Player[] = [];\n\n  constructor(private _bankService: BankService) { }\n\n  public get players(): Player[] {\n    return this._players;\n  }\n\n  public createPlayer(firstName: string, lastName: string, startingBalance: number): Player {\n    const account = this._bankService.OpenAccount(startingBalance);\n    const player = new Player(firstName, lastName, account);\n    this._players.push(player);\n\n    return player;\n  }\n\n  public deletePlayer(player:Player): void {\n    this._players = this._players.filter(p => p !== player);\n  }\n}\n","import { Transaction } from \"./transaction.model\";\n\nexport class Account {        \n    private readonly _transactions: Transaction[];\n    private _balance: number;\n\n    constructor(\n        private readonly _accountNumber: number,\n        openingBalance: number\n    ) {\n        this._transactions = [];\n        this._balance = 0;\n        this.CreateTransaction(openingBalance, \"Opening balance\");\n    }\n\n    get accountNumber(): number {\n        return this._accountNumber;\n    }\n\n    get balance(): number {\n        return this._balance;\n    }\n\n    get transactions(): Transaction[] {\n        return this._transactions;\n    }\n\n    public Deposit(amount: number, description: string): void {\n\n        if (amount <= 0) {\n            throw new Error(\"Cannot deposit a negative amount\");\n        }\n        this.CreateTransaction(amount, description);\n    }\n\n    public Withdraw(amount: number, description: string): void {\n\n        if (amount <= 0) {\n            throw new Error(\"Cannot withdraw a negative amount\");\n        }\n\n        if (amount > this._balance) {\n            throw new Error(\"Insufficient balance\");\n        }\n\n        this.CreateTransaction(amount * -1, description);\n    }\n\n    private CreateTransaction(amount: number, description: string)\n    {\n        this._balance += amount;\n        const transaction = new Transaction(this, amount, description);\n        this._transactions.push(transaction);\n        //console.log(`Account #${this._accountNumber} new balance £${this._balance}`);\n    }\n}\n","import { Guid } from \"guid-typescript\";\r\n\r\nexport default abstract class Entity {\r\n    private _id: Guid;\r\n\r\n    constructor() {\r\n        this._id = Guid.create();\r\n    }\r\n\r\n    public get id(): Guid {\r\n        return this._id;\r\n    }\r\n}","import { Account } from \"./account.model\";\nimport Entity from './entity.model';\n\nexport class Player extends Entity {\n\n    private _isDead: boolean;\n\n    constructor(\n        private _firstName: string,\n        private _lastName: string,\n        private _account: Account\n    ) {\n        super();\n    }\n\n    public get firstName(): string {\n        return this._firstName;\n    }\n\n    public get lastName(): string {\n        return this._lastName;\n    }\n\n    public get name(): string {\n        return `${this._firstName} ${this._lastName}`;\n    }\n\n    public get account(): Account {\n        return this._account;\n    }\n\n    public get isDead(): boolean {\n        return this._isDead;\n    }\n\n    public setDead(): void {\n        this._isDead = true;\n    }\n}","import { Account } from \"./account.model\";\n\nexport class Transaction {\n\n    private readonly _timestamp: Date;\n    private readonly __cumulativeBalance: number;\n\n    constructor(\n        private readonly _account: Account,\n        private readonly _amount: number,\n        private readonly _description: string\n    ) {\n        this._timestamp = new Date();\n        this.__cumulativeBalance = _account.balance;\n    }\n\n    get account(): Account {\n        return this._account;\n    }\n\n    get timestamp(): Date {\n        return this._timestamp;\n    }\n\n    get amount(): number {\n        return this._amount;\n    }\n\n    get description(): string {\n        return this._description;\n    }\n\n    get cumulativeBalance(): number {\n        return this.__cumulativeBalance;\n    }\n}\n","module.exports = \"<nav class=\\\"col d-flex flex-column cc-sidebar p-0 h-100\\\">\\n  <a *ngFor=\\\"let item of items\\\"\\n    class=\\\"cc-sidebar-item\\\"\\n    [class.mt-auto]=\\\"item.floatBottom\\\"\\n    routerLink=\\\"{{item.route}}\\\"\\n    routerLinkActive=\\\"active\\\"\\n    placement=\\\"right\\\"\\n    ngbTooltip=\\\"{{item.title}}\\\"\\n    data-container=\\\"body\\\">\\n      <span class=\\\"oi oi-{{item.iconClass}}\\\"></span>\\n  </a>\\n</nav>\"","module.exports = \".cc-sidebar {\\n  position: fixed;\\n  width: 50px;\\n  top: 0;\\n  left: 0;\\n  flex: 0 0 50px;\\n  background-color: #EEE;\\n  box-shadow: 0 0 5px 1px #444; }\\n  .cc-sidebar-item {\\n    color: #000;\\n    height: 50px;\\n    min-height: 50px;\\n    width: 50px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    border-radius: 25px; }\\n  .cc-sidebar-item:hover {\\n      background-color: #DDD;\\n      text-decoration: none; }\\n  .cc-sidebar-item.active .oi {\\n      color: var(--blue); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9yZW5kZXJlci9hcHAvc2lkZWJhci9EOlxcQ09ERVxcR0lUXFxMVU1JTk9VU1xcQ3JpbWluYWxDb250YWN0L3NyY1xccmVuZGVyZXJcXGFwcFxcc2lkZWJhclxcc2lkZWJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGVBQWU7RUFDZixXQUp1QjtFQUt2QixNQUFNO0VBQ04sT0FBTztFQUNQLGNBUHVCO0VBUXZCLHNCQUFzQjtFQUN0Qiw0QkFBNEIsRUFBQTtFQUU1QjtJQUNJLFdBQVc7SUFDWCxZQWJtQjtJQWNuQixnQkFkbUI7SUFlbkIsV0FmbUI7SUFnQm5CLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLG1CQUF3QyxFQUFBO0VBUjNDO01BV08sc0JBQXNCO01BQ3RCLHFCQUFxQixFQUFBO0VBWjVCO01BaUJXLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9yZW5kZXJlci9hcHAvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJGNjLXNpZGViYXItaXRlbS1zaXplOiA1MHB4O1xuXG4uY2Mtc2lkZWJhciB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHdpZHRoOiAkY2Mtc2lkZWJhci1pdGVtLXNpemU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgZmxleDogMCAwICRjYy1zaWRlYmFyLWl0ZW0tc2l6ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFO1xuICAgIGJveC1zaGFkb3c6IDAgMCA1cHggMXB4ICM0NDQ7XG4gICAgXG4gICAgJi1pdGVtIHtcbiAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgIGhlaWdodDogJGNjLXNpZGViYXItaXRlbS1zaXplO1xuICAgICAgICBtaW4taGVpZ2h0OiAkY2Mtc2lkZWJhci1pdGVtLXNpemU7XG4gICAgICAgIHdpZHRoOiAkY2Mtc2lkZWJhci1pdGVtLXNpemU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAkY2Mtc2lkZWJhci1pdGVtLXNpemUgLyAyO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0RERDtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgfVxuXG4gICAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgICAgIC5vaSB7XG4gICAgICAgICAgICAgICAgY29sb3I6IHZhcigtLWJsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSAgICBcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\ninterface ISidebarItem {\n  iconClass: string;\n  title: string;\n  route: string;\n  floatBottom: boolean;\n}\n\n@Component({\n  selector: 'cc-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  items: ISidebarItem[] = [\n    {\n      iconClass: \"home\",\n      title: \"Dashboard\",\n      route: \"/dashboard\",\n      floatBottom: false\n    },\n    {\n      iconClass: \"people\",\n      title: \"Players\",\n      route: \"/players\",\n      floatBottom: false\n    },\n    {\n      iconClass: \"credit-card\",\n      title: \"Banking\",\n      route: \"/banking\",\n      floatBottom: false\n    },\n    {\n      iconClass: \"code\",\n      title: \"Bank Test\",\n      route: \"/bank-test\",\n      floatBottom: false\n    },\n    {\n      iconClass: \"cog\",\n      title: \"Settings\",\n      route: \"/settings\",\n      floatBottom: true\n    }\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}